{
	"name": "5_explore_payment_type",
	"properties": {
		"folder": {
			"name": "nyc_taxi/discovery"
		},
		"content": {
			"query": "\n/*\nQUERING LINE DELIMETED JSON FILES\n=================================\nFIELDTERMINATOR = '0x0b'\nFIELDQUOTE = '0x0b'\n---- 0x0b hexadecemal equivalent of new line character\n*/\n\n\n-- 1.) Switch to the right database in the built in serverless pool: nyc_taxi_discovery\nUSE nyc_taxi_discovery;\n\n/*\n-- Create the External Data Source if you have not already done so\nCREATE EXTERNAL DATA SOURCE nyc_taxi_data_raw\nWITH(\n    LOCATION = 'abfss://asa-course-test-adlfs-wsp-cnt@asacourseteststaccdl.dfs.core.windows.net/raw/'\n)\n*/\n\n\n\n-- 1a.) Select the RAW JSON data as it is\nSELECT \n    *\nFROM OPENROWSET(\n      BULK 'payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      PARSER_VERSION = '1.0', \n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0a'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type;\n\n\n--2a.) use JSON_VALUE() function to select specific properties from the jsonDoc returned object\n--- NOTE: $ represente 'this' \nSELECT JSON_VALUE(jsonDoc, '$.payment_type') payment_type,\n        JSON_VALUE(jsonDoc, '$.payment_type_desc') payment_type_desc\n  FROM OPENROWSET(\n      BULK 'payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      PARSER_VERSION = '1.0', \n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0a'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type;\n\n\n--3a.) use CAST() function to specify the data type for our columns\n--- This will help performance and cost \nSELECT CAST(JSON_VALUE(jsonDoc, '$.payment_type') AS SMALLINT) payment_type,\n        CAST(JSON_VALUE(jsonDoc, '$.payment_type_desc') AS VARCHAR(15)) payment_type_desc\n  FROM OPENROWSET(\n      BULK 'payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      PARSER_VERSION = '1.0', \n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0a'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type;\n\n\n\n--4a.) we can now explore the datatypes\nEXEC sp_describe_first_result_set N'\n SELECT CAST(JSON_VALUE(jsonDoc, ''$.payment_type'') AS SMALLINT) payment_type,\n        CAST(JSON_VALUE(jsonDoc, ''$.payment_type_desc'') AS VARCHAR(15)) payment_type_desc\n  FROM OPENROWSET(\n      BULK ''payment_type.json'',\n      DATA_SOURCE = ''nyc_taxi_data_raw'',\n      FORMAT = ''CSV'',\n      PARSER_VERSION = ''1.0'', \n      FIELDTERMINATOR = ''0x0b'',\n      FIELDQUOTE = ''0x0b'',\n      ROWTERMINATOR = ''0x0a''\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type';  \n  \n\n\n\n\n\n\n\n/*\nOPENJSON\n========\n1b.) OPENJSON() is more powerful and efficient than the JSON_VALUE() function\n*/\nSELECT \n    *\n  FROM OPENROWSET(\n      BULK 'payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc) -- use the OPENJSON() use CROSS APPLY to push the jsonDoc in\n\n\n--2b.) use the WITH clause to easily specify datatypes \nSELECT payment_type, payment_type_desc\n  FROM OPENROWSET(\n      BULK 'payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc) -- use the OPENJSON() use CROSS APPLY to push the jsonDoc in\n  WITH(\n      payment_type SMALLINT,\n      payment_type_desc VARCHAR(20)\n  );\n\n\n--3b.) use the WITH clause to easily specify columns and datatypes \nSELECT payment_type, description\n  FROM OPENROWSET(\n      BULK 'payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc) -- use the OPENJSON() use CROSS APPLY to push the jsonDoc in\n  WITH(\n      payment_type SMALLINT,\n      description VARCHAR(20) '$.payment_type_desc' --rename payment_type_desc col name to description\n  );\n\n\n\n\n\n\n-----------------------------------------------------\n-- Reading data from JSON with arrays\n-----------------------------------------------------\n-- 1c.) Use JSON_VALUE() func to access the array data in JSON format \nSELECT CAST(JSON_VALUE(jsonDoc, '$.payment_type') AS SMALLINT) payment_type,\n       --payment_type_desc give all NULLs because they are arrays \n       --CAST(JSON_VALUE(jsonDoc, '$.payment_type_desc.value') AS VARCHAR(15)) payment_type_desc,\n       --we need to index them to access thier values\n        CAST(JSON_VALUE(jsonDoc, '$.payment_type_desc[0].value') AS VARCHAR(15)) payment_type_desc_1,\n        CAST(JSON_VALUE(jsonDoc, '$.payment_type_desc[1].value') AS VARCHAR(15)) payment_type_desc_2\n  FROM OPENROWSET(\n      BULK 'payment_type_array.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      PARSER_VERSION = '1.0', \n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0a'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type;\n\n\n\n\n--2c.) Use OPENJSON() to explode the array\nSELECT  payment_type, value\n  FROM OPENROWSET(\n      BULK 'payment_type_array.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      PARSER_VERSION = '1.0', \n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0a'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc) -- pass payment_type\n  WITH\n  (\n      payment_type SMALLINT,\n      payment_type_desc NVARCHAR(MAX) AS JSON -- becos this contains another child layer\n  )\n  CROSS APPLY OPENJSON(payment_type_desc) -- pass payment_type_desc child layer\n  WITH(\n      -- notice that sub_type & value are they names used in the child of payment_type_desc\n      sub_type SMALLINT,\n      value VARCHAR(20)\n  );\n\n\n\n--3c we can rename value fields\nSELECT  payment_type, payment_type_desc_value\n  FROM OPENROWSET(\n      BULK 'payment_type_array.json',\n      DATA_SOURCE = 'nyc_taxi_data_raw',\n      FORMAT = 'CSV',\n      PARSER_VERSION = '1.0', \n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0a'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc) -- pass payment_type\n  WITH\n  (\n      payment_type SMALLINT,\n      payment_type_desc NVARCHAR(MAX) AS JSON -- becos this contains another child layer\n  )\n  CROSS APPLY OPENJSON(payment_type_desc) -- pass payment_type_desc\n  WITH(\n      -- notice that sub_type & value are they names used in the child of payment_type_desc\n      sub_type SMALLINT,\n      payment_type_desc_value VARCHAR(20) '$.value' -- rename the child\n  );\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_discovery",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}