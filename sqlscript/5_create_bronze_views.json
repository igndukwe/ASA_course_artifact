{
	"name": "5_create_bronze_views",
	"properties": {
		"folder": {
			"name": "nyc_taxi/ldw"
		},
		"content": {
			"query": "/*\nCREATING VIEWS\n- we can not create external tables on JSON files (e.g., rate_code and payment_type)\n-- Hence we olnly created external tables on CSV, TSV, PARQUET, and DELTA as indicated in 4_create_bronze_tables scripts\n--- The good news is that we can create views on JSON files (in addition to the other file formats)\n*/\n\nUSE nyc_taxi_ldw\nGO\n\n\n/*\nCREATE VIEW FOR rate code JSON file\n*/\n--Create view for rate code file\n\n\n--1a.) Drop views if it already exists\nDROP VIEW IF EXISTS bronze.vw_rate_code\nGO\n\n--2a.) Create view for rate_code\n--- you can copy the JSON select query from 1a.) explore/6_explore_rate_code\nCREATE VIEW bronze.vw_rate_code\nAS\nSELECT rate_code_id, rate_code\n  FROM OPENROWSET(\n      BULK 'raw/rate_code.json',\n      DATA_SOURCE = 'nyc_taxi_src',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS rate_code\n  CROSS APPLY OPENJSON(jsonDoc)\n  WITH(\n      rate_code_id TINYINT,\n      rate_code VARCHAR(20) \n  )\nGO\n\n\n-- 3a.) query view\nSELECT * FROM bronze.vw_rate_code\nGO\n\n\n\n\n/*\nCREATE VIEW FOR payment type JSON file\n*/\n--1b.) Drop views if it already exists\nDROP VIEW IF EXISTS bronze.vw_payment_type\nGO\n\n\n\n--2b.) Create view for payment_type\n--- you can copy the JSON select query from 3b.) explore/5_explore_rate_code\nCREATE VIEW bronze.vw_payment_type\nAS\nSELECT payment_type, description\n  FROM OPENROWSET(\n      BULK 'raw/payment_type.json',\n      DATA_SOURCE = 'nyc_taxi_src',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS payment_type\n  CROSS APPLY OPENJSON(jsonDoc)\n  WITH(\n      payment_type SMALLINT,\n      description VARCHAR(20) '$.payment_type_desc'\n  )\nGO\n\n\n\n--3b. Query the view\nSELECT * FROM bronze.vw_payment_type\nGO\n\n\n\n\n\n/*\nPARTITION PRUNING WITH VIEWS\n============================\n\nCREATE VIEW FOR vw_trip_data_green file\n\n--We are not able to include the partitions year and month into the external tables\n--- we can achieve this in views\n*/\n--1c.) Drop views if it already exists \nDROP VIEW IF EXISTS bronze.vw_trip_data_green_csv\nGO\n\n\n-- 2c.) Create view for trip_data_green\nCREATE VIEW bronze.vw_trip_data_green_csv\nAS\nSELECT\n    result.filepath(1) AS year,\n    result.filepath(2) AS month,\n    result.*\nFROM\n    OPENROWSET(\n        BULK 'raw/trip_data_green_csv/year=*/month=*/*.csv',\n        DATA_SOURCE = 'nyc_taxi_src',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE\n    )\n    WITH (\n      VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n  ) AS [result]\nGO\n\n\n\n--3c. Query the view\nSELECT TOP(100) *\n  FROM bronze.vw_trip_data_green_csv\nGO\n\n--4c. We can Query the view based on year and month\nSELECT TOP(100) *\n  FROM bronze.vw_trip_data_green_csv\n  WHERE year = '2020' AND month = '01'\nGO\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}